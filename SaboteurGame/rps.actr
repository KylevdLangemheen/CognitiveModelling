;;; Miner act-r model
;;;

(add-dm
    (r1 isa rimplication role unknown type break implication saboteur)
    (r2 isa rimplication role miner type break implication saboteur)
    (r3 isa rimplication role saboteur type break implication miner)
    (r4 isa rimplication role unknown type repair implication unknown)
    (r5 isa rimplication role miner type repair implication miner)
    (r6 isa rimplication role saboteur type repair implication saboteur)

    (s0 isa restimate player zero role saboteur)
    (m0 isa restimate player zero role miner)
    (n0 isa restimate player zero role unknown)
    (s1 isa restimate player one role saboteur)
    (m1 isa restimate player one role miner)
    (n1 isa restimate player one role unknown)
    (s2 isa restimate player two role saboteur)
    (m2 isa restimate player two role miner)
    (n2 isa restimate player two role unknown)
    (s3 isa restimate player three role saboteur)
    (m3 isa restimate player three role miner)
    (n3 isa restimate player three role unknown)
    (goal isa goal state start)
)

(set-all-baselevels -100 10) ;; time offset and number of references
;; Prefer 'unknown' restimates?

;; At the start of the model, prepare for taking action

(p prepare-for-action-start
    =goal>
        isa goal
        state start
==>
    =goal>
        state waiting
    +action>
        isa process
)

(p retrieve-player-belief
    =goal>
        isa goal
        state waiting
    =action>
        isa process
        playerno =p
==>
    =goal>
        state retrievebelief
    +retrieval>
        isa restimate
        player =p
    -imaginal>
    -action>
)

(p return-player-belief
    =goal>
        isa goal
        state retrievebelief
    =retrieval>
        isa restimate
        role =r
==>
    =goal>
        state returnbelief
    +action>
        isa process
        role =r
)

(p restart-after-returning
    =goal>
        isa goal
        state returnbelief
==>
    +goal>
        isa goal
        state start
    -action>
)

(p update-player-belief
    =goal>
        isa goal
        state waiting
    =action>
        isa process
        player =p
        role =r
==>
    =goal>
        state updatebelief
    +imaginal>
        isa restimate
        player =p
        role =r
    -action>
)

(p restart-after-update
    =goal>
        isa goal
        state updatebelief
==>
    +goal>
        isa goal
        state start
)

(p imply-player-belief
    =goal>
        isa goal
        state waiting
    =action>
        isa process
        from =from
        to =to
        type =type
==>
    =goal>
        state retrieverestimate
        from =from
        type =type
    +retrieval>
        isa restimate
        player =to
    -imaginal>
    -action>
)

(p retrieve-role-estimate
    =goal>
        isa goal
        state retrieverestimate
        from =from
        type =type
    =retrieval>
        isa restimate
        role =r
==>
    =goal>
        state retrieveimplication
    +retrieval>
        isa rimplication
        role =r
        type =type
)

(p update-implication
    =goal>
        isa goal
        state retrieveimplication
        from =from
    =retrieval>
        isa rimplication
        implication =imp
==>
    =goal>
        state updateimplication
    +imaginal>
        isa restimate
        player =from
        role =imp
)

(p restart-after-implication
    =goal>
        isa goal
        state updateimplication
==>
    +goal>
        isa goal
        state start
)

(goal-focus goal)
